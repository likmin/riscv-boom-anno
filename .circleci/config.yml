# CircleCI Configuration File

# version of circleci
version: 2

# set of jobs to run
jobs:
    install-riscv-toolchain:
        docker:
            - image: ucbbar/chipyard-image:1.0.0
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - riscv-tools-installed-v4-{{ checksum "../riscv-tools.hash" }}
            - run:
                name: Building riscv-tools
                command: |
                    .circleci/build-toolchains.sh riscv-tools
                no_output_timeout: 120m
            - save_cache:
                key: riscv-tools-installed-v4-{{ checksum "../riscv-tools.hash" }}
                paths:
                    - "/home/riscvuser/riscv-tools-install"
    install-esp-toolchain:
        docker:
            - image: ucbbar/chipyard-image:1.0.0
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - esp-tools-installed-v4-{{ checksum "../esp-tools.hash" }}
            - run:
                name: Building esp-tools
                command: |
                    .circleci/build-toolchains.sh esp-tools
                no_output_timeout: 120m
            - save_cache:
                key: esp-tools-installed-v4-{{ checksum "../esp-tools.hash" }}
                paths:
                    - "/home/riscvuser/esp-tools-install"
    prepare-build-environment:
        docker:
            - image: ucbbar/chipyard-image:1.0.0
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - add_ssh_keys:
                fingerprints:
                    - "3e:c3:02:5b:ed:64:8c:b7:b0:04:43:bc:83:43:73:1e"
            - checkout
            - restore_cache:
                keys:
                    - chipyard-v13-{{ checksum "CHIPYARD.hash" }}
            - run:
                name: Checkout submodules
                command: |
                    .circleci/prepare-for-rtl-build.sh
                no_output_timeout: 120m
            - save_cache:
                key: chipyard-v13-{{ checksum "CHIPYARD.hash" }}
                paths:
                    - "/home/riscvuser/chipyard"
    run-scala-checkstyle:
        docker:
            - image: ucbbar/chipyard-image:1.0.0
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - run:
                name: Run Scala checkstyle
                command: make checkstyle
    prepare-smallboomconfig:
        docker:
            - image: ucbbar/chipyard-image:1.0.0
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - add_ssh_keys:
                fingerprints:
                    - "3e:c3:02:5b:ed:64:8c:b7:b0:04:43:bc:83:43:73:1e"
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - riscv-tools-installed-v4-{{ checksum "../riscv-tools.hash" }}
            - restore_cache:
                keys:
                    - chipyard-v13-{{ checksum "CHIPYARD.hash" }}
            - run:
                name: Building SmallBoomConfig using Verilator
                command: .circleci/do-rtl-build.sh smallboom
                no_output_timeout: 120m
            - save_cache:
                key: smallboomconfig-{{ .Branch }}-{{ .Revision }}
                paths:
                    - "/home/riscvuser/chipyard"
    prepare-mediumboomconfig:
        docker:
            - image: ucbbar/chipyard-image:1.0.0
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - add_ssh_keys:
                fingerprints:
                    - "3e:c3:02:5b:ed:64:8c:b7:b0:04:43:bc:83:43:73:1e"
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - riscv-tools-installed-v4-{{ checksum "../riscv-tools.hash" }}
            - restore_cache:
                keys:
                    - chipyard-v13-{{ checksum "CHIPYARD.hash" }}
            - run:
                name: Building MediumBoomConfig using Verilator
                command: .circleci/do-rtl-build.sh mediumboom
                no_output_timeout: 120m
            - save_cache:
                key: mediumboomconfig-{{ .Branch }}-{{ .Revision }}
                paths:
                    - "/home/riscvuser/chipyard"
    prepare-largeboomconfig:
        docker:
            - image: ucbbar/chipyard-image:1.0.0
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - add_ssh_keys:
                fingerprints:
                    - "3e:c3:02:5b:ed:64:8c:b7:b0:04:43:bc:83:43:73:1e"
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - riscv-tools-installed-v4-{{ checksum "../riscv-tools.hash" }}
            - restore_cache:
                keys:
                    - chipyard-v13-{{ checksum "CHIPYARD.hash" }}
            - run:
                name: Building LargeBoomConfig using Verilator
                command: .circleci/do-rtl-build.sh largeboom
                no_output_timeout: 120m
            - save_cache:
                key: largeboomconfig-{{ .Branch }}-{{ .Revision }}
                paths:
                    - "/home/riscvuser/chipyard"
    prepare-megaboomconfig:
        docker:
            - image: ucbbar/chipyard-image:1.0.0
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - add_ssh_keys:
                fingerprints:
                    - "3e:c3:02:5b:ed:64:8c:b7:b0:04:43:bc:83:43:73:1e"
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - riscv-tools-installed-v4-{{ checksum "../riscv-tools.hash" }}
            - restore_cache:
                keys:
                    - chipyard-v13-{{ checksum "CHIPYARD.hash" }}
            - run:
                name: Building MegaBoomConfig using Verilator
                command: .circleci/do-rtl-build.sh megaboom
                no_output_timeout: 240m
            - save_cache:
                key: megaboomconfig-{{ .Branch }}-{{ .Revision }}
                paths:
                    - "/home/riscvuser/chipyard"
    prepare-smallrv32boomconfig:
        docker:
            - image: ucbbar/chipyard-image:1.0.0
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - add_ssh_keys:
                fingerprints:
                    - "3e:c3:02:5b:ed:64:8c:b7:b0:04:43:bc:83:43:73:1e"
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - riscv-tools-installed-v4-{{ checksum "../riscv-tools.hash" }}
            - restore_cache:
                keys:
                    - chipyard-v13-{{ checksum "CHIPYARD.hash" }}
            - run:
                name: Building SmallRV32BoomConfig using Verilator
                command: .circleci/do-rtl-build.sh rv32boom
                no_output_timeout: 120m
            - save_cache:
                key: smallrv32boomconfig-{{ .Branch }}-{{ .Revision }}
                paths:
                    - "/home/riscvuser/chipyard"
    prepare-hwachaboomconfig:
        docker:
            - image: ucbbar/chipyard-image:1.0.0
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - add_ssh_keys:
                fingerprints:
                    - "3e:c3:02:5b:ed:64:8c:b7:b0:04:43:bc:83:43:73:1e"
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - esp-tools-installed-v4-{{ checksum "../esp-tools.hash" }}
            - restore_cache:
                keys:
                    - chipyard-v13-{{ checksum "CHIPYARD.hash" }}
            - run:
                name: Building HwachaBoomConfig using Verilator
                command: .circleci/do-rtl-build.sh hwachaboom
                no_output_timeout: 120m
            - save_cache:
                key: hwachaboomconfig-{{ .Branch }}-{{ .Revision }}
                paths:
                    - "/home/riscvuser/chipyard"
    smallboomconfig-run-csmith-tests:
        docker:
            - image: ucbbar/chipyard-image:1.0.0
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - riscv-tools-installed-v4-{{ checksum "../riscv-tools.hash" }}
            - restore_cache:
                keys:
                    - smallboomconfig-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Run SmallBoomConfig csmith tests
                command: .circleci/build-run-csmith-tests.sh smallboom 50
                no_output_timeout: 30m
    smallboomconfig-run-riscv-tests:
        docker:
            - image: ucbbar/chipyard-image:1.0.0
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - riscv-tools-installed-v4-{{ checksum "../riscv-tools.hash" }}
            - restore_cache:
                keys:
                    - smallboomconfig-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Run SmallBoomConfig riscv tests
                command: .circleci/run-tests.sh smallboom
    mediumboomconfig-run-csmith-tests:
        docker:
            - image: ucbbar/chipyard-image:1.0.0
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - riscv-tools-installed-v4-{{ checksum "../riscv-tools.hash" }}
            - restore_cache:
                keys:
                    - mediumboomconfig-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Run MediumBoomConfig csmith tests
                command: .circleci/build-run-csmith-tests.sh mediumboom 50
                no_output_timeout: 30m
    mediumboomconfig-run-riscv-tests:
        docker:
            - image: ucbbar/chipyard-image:1.0.0
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - riscv-tools-installed-v4-{{ checksum "../riscv-tools.hash" }}
            - restore_cache:
                keys:
                    - mediumboomconfig-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Run MediumBoomConfig riscv tests
                command: .circleci/run-tests.sh mediumboom
    largeboomconfig-run-csmith-tests:
        docker:
            - image: ucbbar/chipyard-image:1.0.0
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - riscv-tools-installed-v4-{{ checksum "../riscv-tools.hash" }}
            - restore_cache:
                keys:
                    - largeboomconfig-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Run LargeBoomConfig csmith tests
                command: .circleci/build-run-csmith-tests.sh largeboom 40
                no_output_timeout: 30m
    largeboomconfig-run-riscv-tests:
        docker:
            - image: ucbbar/chipyard-image:1.0.0
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - riscv-tools-installed-v4-{{ checksum "../riscv-tools.hash" }}
            - restore_cache:
                keys:
                    - largeboomconfig-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Run LargeBoomConfig riscv tests
                command: .circleci/run-tests.sh largeboom
    megaboomconfig-run-csmith-tests:
        docker:
            - image: ucbbar/chipyard-image:1.0.0
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - riscv-tools-installed-v4-{{ checksum "../riscv-tools.hash" }}
            - restore_cache:
                keys:
                    - megaboomconfig-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Run MegaBoomConfig csmith tests
                command: .circleci/build-run-csmith-tests.sh megaboom 40
                no_output_timeout: 30m
    megaboomconfig-run-riscv-tests:
        docker:
            - image: ucbbar/chipyard-image:1.0.0
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - riscv-tools-installed-v4-{{ checksum "../riscv-tools.hash" }}
            - restore_cache:
                keys:
                    - megaboomconfig-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Run MegaBoomConfig riscv tests
                command: .circleci/run-tests.sh megaboom
                no_output_timeout: 30m
    smallrv32boomconfig-run-csmith-tests:
        docker:
            - image: ucbbar/chipyard-image:1.0.0
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - riscv-tools-installed-v4-{{ checksum "../riscv-tools.hash" }}
            - restore_cache:
                keys:
                    - smallrv32boomconfig-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Run SmallRV32BoomConfig csmith tests
                command: .circleci/build-run-csmith-tests.sh rv32boom 50
                no_output_timeout: 30m
    smallrv32boomconfig-run-riscv-tests:
        docker:
            - image: ucbbar/chipyard-image:1.0.0
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - riscv-tools-installed-v4-{{ checksum "../riscv-tools.hash" }}
            - restore_cache:
                keys:
                    - smallrv32boomconfig-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Run SmallRV32BoomConfig riscv tests
                command: .circleci/run-tests.sh rv32boom
    hwachaboomconfig-run-riscv-tests:
        docker:
            - image: ucbbar/chipyard-image:1.0.0
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - run:
                name: Create hash of toolchains
                command: |
                    .circleci/create-hash.sh
            - restore_cache:
                keys:
                    - esp-tools-installed-v4-{{ checksum "../esp-tools.hash" }}
            - restore_cache:
                keys:
                    - hwachaboomconfig-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Run HwachaBoomConfig riscv tests
                command: .circleci/run-tests.sh hwachaboom

# Order and dependencies of jobs to run
workflows:
    version: 2
    build-and-test-boom-configs:
        jobs:
            # Make the toolchains
            - install-riscv-toolchain
            - install-esp-toolchain

            # Prepare chipyard directory
            - prepare-build-environment

            # Run generic syntax checking
            - run-scala-checkstyle

            # Prepare the verilator builds
            - prepare-smallboomconfig:
                requires:
                    - prepare-build-environment
                    - install-riscv-toolchain
            - prepare-mediumboomconfig:
                requires:
                    - prepare-build-environment
                    - install-riscv-toolchain
            - prepare-largeboomconfig:
                requires:
                    - prepare-build-environment
                    - install-riscv-toolchain
            - prepare-megaboomconfig:
                requires:
                    - prepare-build-environment
                    - install-riscv-toolchain
            # - prepare-smallrv32boomconfig:
            #     requires:
            #         - prepare-build-environment
            #         - install-riscv-toolchain
            - prepare-hwachaboomconfig:
                requires:
                    - prepare-build-environment
                    - install-esp-toolchain

            # Run the SmallBoomConfig tests
            - smallboomconfig-run-csmith-tests:
                requires:
                    - prepare-smallboomconfig
            - smallboomconfig-run-riscv-tests:
                requires:
                    - prepare-smallboomconfig

            # Run the MediumBoomConfig tests
            - mediumboomconfig-run-csmith-tests:
                requires:
                    - prepare-mediumboomconfig
            - mediumboomconfig-run-riscv-tests:
                requires:
                    - prepare-mediumboomconfig

            # Run the LargeBoomConfig tests
            - largeboomconfig-run-csmith-tests:
                requires:
                    - prepare-largeboomconfig
            - largeboomconfig-run-riscv-tests:
                requires:
                    - prepare-largeboomconfig

            # Run the MegaBoomConfig tests
            - megaboomconfig-run-csmith-tests:
                requires:
                    - prepare-megaboomconfig
            - megaboomconfig-run-riscv-tests:
                requires:
                    - prepare-megaboomconfig

            # Run the SmallRV32BoomConfig tests
            # - smallrv32boomconfig-run-riscv-tests:
            #     requires:
            #         - prepare-smallrv32boomconfig

            # Run the HwachaBoomConfig tests
            - hwachaboomconfig-run-riscv-tests:
                requires:
                    - prepare-hwachaboomconfig
